{"version":3,"sources":["asset/web.png","asset/profile.png","asset/web-developer.png","services/logService.js","services/httpService.js","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","services/movieService.js","services/genreService.js","components/common/listGroup.jsx","components/common/pagination.jsx","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/rentals.jsx","components/customers.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logOut.jsx","components/profile.jsx","components/common/protectedRoute.jsx","services/userService.js","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Like","props","classes","liked","style","cursor","onClick","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleLike","index","indexOf","setState","handleDelete","originalMovies","filter","m","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Rentals","Customers","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","marginTop","textAlign","color","src","image","height","width","Logout","Profile","handleBack","ProtectedRoute","component","render","Route","register","RegisterForm","userService","App","Switch","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,uTCM5B,OACbC,KAPF,aAQEC,IANF,SAAaC,GACXC,QAAQD,MAAMA,KCChBE,IAAMC,SAASC,QAAUC,iDAEzBH,IAAMI,aAAaC,SAASC,IAAI,MAAM,SAAAR,GASpC,OAPEA,EAAMO,UAAYP,EAAMO,SAASE,QAAU,KAAOT,EAAMO,SAASE,OAAS,MAG1EC,EAAOX,IAAIC,GACXW,QAAMX,MAAM,mCAGPY,QAAQC,OAAOb,MAOT,OACbc,IAAKZ,IAAMY,IACXC,KAAMb,IAAMa,KACZC,IAAKd,IAAMc,IACXC,OAAQf,IAAMe,OACdC,OATF,SAAgBC,GACdjB,IAAMC,SAASiB,QAAQC,OAAO,gBAAkBF,I,4CCX3C,WAAqBG,EAAOC,GAA5B,iBAAAC,EAAA,sEACuBC,EAAKV,KANf,QAMiC,CAAEO,QAAOC,aADvD,gBACSJ,EADT,EACGO,KACRC,aAAaC,QANE,QAMgBT,GAF1B,4C,sBAsBA,SAASU,IACd,OAAOF,aAAaG,QA3BL,SAEjBL,EAAKP,OAAOW,KA4BG,OACbE,MA3BK,SAAP,qCA4BEC,aAvBK,SAAsBb,GAC3BQ,aAAaC,QAVE,QAUgBT,IAuB/Bc,OApBK,WACLN,aAAaO,WAdE,UAkCfC,eAjBK,WACL,IACE,IAAMhB,EAAMQ,aAAaG,QAnBZ,SAoBb,OAAOM,IAAUjB,GACjB,MAAOkB,GACP,OAAO,OAaTR,U,QC9BaS,EAPF,SAAAC,GACL,IAAIC,EAAQ,cAEZ,OADID,EAAME,QAAOD,GAAS,MAE1B,uBAAIE,MAAO,CAACC,OAAO,WAAWC,QAASL,EAAMK,QAASC,UAAWL,EAASM,cAAY,UCgC/EC,E,2MApCbC,UAAY,SAAAC,GACV,IAAMC,EAAU,eAAQ,EAAKX,MAAMW,YAC/BA,EAAWD,OAASA,EACtBC,EAAWC,MAA6B,QAArBD,EAAWC,MAAkB,OAAS,OAEzDD,EAAWD,KAAOA,EAClBC,EAAWC,MAAQ,OAErB,EAAKZ,MAAMa,OAAOF,I,EAEpBG,eAAiB,SAAAC,GAAW,IAClBJ,EAAe,EAAKX,MAApBW,WACR,OAAII,EAAOL,OAASC,EAAWD,KAAa,KACnB,QAArBC,EAAWC,MAAwB,uBAAGN,UAAU,mBAC7C,uBAAGA,UAAU,qB,wEAEZ,IAAD,OACP,OACE,+BACE,4BACGU,KAAKhB,MAAMiB,QAAQC,KAAI,SAAAH,GAAM,OAC5B,wBACET,UAAU,YACVa,IAAKJ,EAAOL,MAAQK,EAAOI,IAC3Bd,QAAS,kBAAM,EAAKI,UAAUM,EAAOL,QAEpCK,EAAOK,MACP,EAAKN,eAAeC,a,GA5BTM,a,iBC2BXC,E,2MAzBbC,WAAa,SAACC,EAAMT,GAClB,OAAIA,EAAOU,QAAgBV,EAAOU,QAAQD,GACnCE,IAAEnD,IAAIiD,EAAMT,EAAOL,O,EAE5BiB,UAAY,SAACH,EAAMT,GACjB,OAAOS,EAAKI,KAAOb,EAAOL,MAAQK,EAAOI,M,wEAEjC,IAAD,SACmBH,KAAKhB,MAAvBb,EADD,EACCA,KAAM8B,EADP,EACOA,QACd,OACE,+BACG9B,EAAK+B,KAAI,SAAAM,GAAI,OACZ,wBAAIL,IAAKK,EAAKI,KACXX,EAAQC,KAAI,SAAAH,GAAM,OACjB,wBAAII,IAAK,EAAKQ,UAAUH,EAAMT,IAC3B,EAAKQ,WAAWC,EAAMT,gB,GAhBfM,aCUTQ,EATD,SAAC,GAA2C,IAAzCZ,EAAwC,EAAxCA,QAASN,EAA+B,EAA/BA,WAAYE,EAAmB,EAAnBA,OAAQ1B,EAAW,EAAXA,KAC5C,OACE,2BAAOmB,UAAU,SACf,kBAAC,EAAD,CAAaW,QAASA,EAASN,WAAYA,EAAYE,OAAQA,IAC/D,kBAAC,EAAD,CAAWI,QAASA,EAAS9B,KAAMA,MCoC1B2C,E,YAZb,aAAe,IAAD,uBACZ,+CAzBFb,QAAU,CACR,CACEP,KAAM,QACNU,MAAO,QACPK,QAAS,SAAAM,GAAK,OAAI,kBAACC,EAAA,EAAD,CAAMC,GAAE,kBAAaF,EAAMH,MAAQG,EAAMG,SAE7D,CAAExB,KAAM,aAAcU,MAAO,SAC7B,CAAEV,KAAM,gBAAiBU,MAAO,SAChC,CAAEV,KAAM,kBAAmBU,MAAO,QAClC,CACED,IAAK,OACLM,QAAS,SAAAM,GAAK,OAAI,kBAAC,EAAD,CAAM7B,MAAO6B,EAAM7B,MAAOG,QAAS,kBAAM,EAAKL,MAAMmC,OAAOJ,SAanE,EATdK,aAAe,CACbjB,IAAK,SACLM,QAAS,SAAAM,GAAK,OACZ,4BAAQ1B,QAAS,kBAAM,EAAKL,MAAMqC,SAASN,IAAQzB,UAAU,yBAA7D,YAQF,IAAMgC,EAAOC,EAAK3C,iBAFN,OAGR0C,GAAQA,EAAKE,SAAS,EAAKvB,QAAQwB,KAAK,EAAKL,cAHrC,E,sEAMJ,IAAD,EACgCpB,KAAKhB,MAApC0C,EADD,EACCA,OAAQ7B,EADT,EACSA,OAAQF,EADjB,EACiBA,WACxB,OAAO,kBAAC,EAAD,CAAOM,QAASD,KAAKC,QAAS9B,KAAMuD,EAAQ/B,WAAYA,EAAYE,OAAQA,Q,GAjC7DQ,aCF1B,SAASsB,EAASC,GAChB,MAAM,GAAN,OAHkB,UAGlB,YAAyBA,GAOpB,SAASC,EAASC,GACvB,OAAO5D,EAAKX,IAAIoE,EAASG,IAEpB,SAASC,EAAUhB,GACxB,GAAIA,EAAMH,IAAK,CACb,IAAMoB,EAAI,eAAQjB,GAElB,cADOiB,EAAKpB,IACL1C,EAAKT,IAAIkE,EAASZ,EAAMH,KAAMoB,GAEvC,OAAO9D,EAAKV,KAnBM,UAmBYuD,GAGzB,SAASkB,EAAYH,GAC1B,OAAO5D,EAAKR,OAAOiE,EAASG,ICvBvB,SAASI,IACd,OAAOhE,EAAKX,IAAI,WCFlB,IAAM4E,EAAY,SAAAnD,GAAU,IAExBoD,EAKEpD,EALFoD,MACAC,EAIErD,EAJFqD,aACAC,EAGEtD,EAHFsD,cACAC,EAEEvD,EAFFuD,aACAC,EACExD,EADFwD,aAEF,OACE,wBAAIlD,UAAU,cACX8C,EAAMlC,KAAI,SAAAM,GAAI,OACb,wBACEnB,QAAS,kBAAMmD,EAAahC,IAC5BL,IAAKK,EAAK8B,GACVhD,UACEkB,IAAS+B,EAAe,yBAA2B,mBAGpD/B,EAAK6B,SAMhBF,EAAUM,aAAe,CACvBJ,aAAc,OACdC,cAAe,OAEFH,QCEAO,EA5BI,SAAA1D,GAAU,IACnB2D,EAAoD3D,EAApD2D,WAAYC,EAAwC5D,EAAxC4D,SAAUC,EAA8B7D,EAA9B6D,YAAaC,EAAiB9D,EAAjB8D,aACrCC,EAAaC,KAAKC,KAAKN,EAAaC,GAC1C,GAAmB,IAAfG,EAAkB,OAAO,KAC7B,IAAMG,EAAQxC,IAAEyC,MAAM,EAAGJ,EAAa,GACtC,OACE,6BACE,wBAAIzD,UAAU,cACX4D,EAAMhD,KAAI,SAAAkD,GAAI,OACb,wBACEjD,IAAKiD,EACL9D,UAAW8D,IAASP,EAAc,mBAAqB,aAEvD,uBAAGvD,UAAU,YAAYD,QAAS,kBAAMyD,EAAaM,KAClDA,UCfR,SAASC,EAASjB,EAAOkB,EAAYV,GAC1C,IAAMW,GAAcD,EAAa,GAAKV,EACtC,OAAOlC,IAAE0B,GACNoB,MAAMD,GACNE,KAAKb,GACLc,QCLL,IAaeC,EAbG,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAC1B,OACE,2BACEC,KAAK,OACLC,KAAK,QACLxE,UAAU,oBACVyE,YAAY,YACZL,MAAOA,EACPE,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,cAAcP,WCoI/BQ,E,2MAjIbC,MAAQ,CACNzC,OAAQ,GACR0C,OAAQ,GACRC,YAAa,GACbC,cAAe,KACf1B,SAAU,EACVC,YAAa,EACblD,WAAY,CAAED,KAAM,QAASE,MAAO,Q,EAWtC2E,WAAa,SAAAxD,GACX,IAAMW,EAAM,YAAO,EAAKyC,MAAMzC,QACxB8C,EAAQ9C,EAAO+C,QAAQ1D,GAC7BW,EAAO8C,GAAP,eAAqB9C,EAAO8C,IAC5B9C,EAAO8C,GAAOtF,OAASwC,EAAO8C,GAAOtF,MACrC,EAAKwF,SAAS,CAAEhD,Y,EAGlBiD,a,uCAAe,WAAM5D,GAAN,iBAAA9C,EAAA,6DACP2G,EAAiB,EAAKT,MAAMzC,OAC5BA,EAASkD,EAAeC,QAAO,SAAAC,GAAC,OAAIA,EAAElE,MAAQG,EAAMH,OAC1D,EAAK8D,SAAS,CAAEhD,WAHH,kBAMLO,EAAYlB,EAAMH,KANb,uDAQP,KAAG5D,UAAmC,MAAvB,KAAGA,SAASE,QAC7BE,QAAMX,MAAM,uCAEd,EAAKiI,SAAS,CAAEhD,OAAQkD,IAXb,yD,wDAefG,iBAAmB,SAAA3B,GACjB,EAAKsB,SAAS,CAAE7B,YAAaO,K,EAG/B4B,kBAAoB,SAAAC,GAClB,EAAKP,SAAS,CAAEJ,cAAeW,EAAOZ,YAAa,GAAIxB,YAAa,K,EAGtEqC,aAAe,SAAAC,GACb,EAAKT,SAAS,CAAEL,YAAac,EAAOb,cAAe,KAAMzB,YAAa,K,EAGxEuC,WAAa,SAAAzF,GACX,EAAK+E,SAAS,CAAE/E,gB,EAGlB0F,aAAe,WAAO,IAAD,EAQf,EAAKlB,MANPvB,EAFiB,EAEjBA,SACAC,EAHiB,EAGjBA,YACAlD,EAJiB,EAIjBA,WACA2E,EALiB,EAKjBA,cACAD,EANiB,EAMjBA,YACQiB,EAPS,EAOjB5D,OAGE6D,EAAWD,EACXjB,EACFkB,EAAWD,EAAUT,QAAO,SAAAC,GAAC,OAAIA,EAAE5D,MAAMsE,cAAcC,WAAWpB,EAAYmB,kBACvElB,GAAiBA,EAAc1D,MACtC2E,EAAWD,EAAUT,QAAO,SAAAC,GAAC,OAAIA,EAAEG,MAAMrE,MAAQ0D,EAAc1D,QAIjE,IAEMc,EAAS2B,EAFA3C,IAAEgF,QAAQH,EAAU,CAAC5F,EAAWD,MAAO,CAACC,EAAWC,QAElCiD,EAAaD,GAE7C,MAAO,CAAE+C,WAAYJ,EAASK,OAAQzH,KAAMuD,I,2NApErBQ,I,uBAAf/D,E,EAAAA,KACFiG,E,CAAU,CAAExD,IAAK,GAAIkD,KAAM,e,mBAAmB3F,I,SNhB/CD,EAAKX,IAPM,W,gBMyBFmE,E,EAANvD,KACR6B,KAAK0E,SAAS,CAAEhD,SAAQ0C,W,sIAmEhB,IAAD,EACoDpE,KAAKmE,MAAxDvB,EADD,EACCA,SAAUC,EADX,EACWA,YAAalD,EADxB,EACwBA,WAAY0E,EADpC,EACoCA,YAEnC/C,GADkBtB,KAAKmE,MAAMzC,OAA7BkE,OACS5F,KAAKhB,MAAdsC,MAHD,EAM8BtB,KAAKqF,eAAlCM,EAND,EAMCA,WAAkBjE,EANnB,EAMavD,KACpB,OACE,yBAAKmB,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACE8C,MAAOpC,KAAKmE,MAAMC,OAClB7B,aAAcvC,KAAKmE,MAAMG,cACzB9B,aAAcxC,KAAKgF,qBAIvB,yBAAK1F,UAAU,YACZgC,GACC,kBAACN,EAAA,EAAD,CAAMC,GAAG,cAAc3B,UAAU,kBAAkBH,MAAO,CAAE0G,aAAc,KAA1E,aAIF,sCAAYF,EAAZ,4BAEA,kBAAC,EAAD,CAAWjC,MAAOW,EAAaT,SAAU5D,KAAKkF,eAE9C,kBAAC,EAAD,CACExD,OAAQA,EACR/B,WAAYA,EACZwB,OAAQnB,KAAKuE,WACblD,SAAUrB,KAAK2E,aACf9E,OAAQG,KAAKoF,aAGf,kBAAC,EAAD,CACEzC,WAAYgD,EACZ9C,YAAaA,EACbD,SAAUA,EACVE,aAAc9C,KAAK+E,yB,GA1HV1E,aCPNyF,EAJC,WACd,OAAO,wCCGMC,EAJG,WACd,OAAO,0CCGIC,EAJE,WACf,OAAO,+C,QCuDMC,GAtDA,SAAC,GAAc,IAAZ3E,EAAW,EAAXA,KAChB,OACE,yBAAKhC,UAAU,iDACb,kBAAC0B,EAAA,EAAD,CAAM1B,UAAU,eAAe2B,GAAG,KAAlC,gBAGA,4BACE3B,UAAU,iBACVuE,KAAK,SACLqC,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMhH,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BsC,GAAG,sBAC3C,yBAAKtC,UAAU,uBACb,kBAACiH,EAAA,EAAD,CAASjH,UAAU,oBAAoB2B,GAAG,WAA1C,UAGA,kBAACsF,EAAA,EAAD,CAASjH,UAAU,oBAAoB2B,GAAG,cAA1C,aAGA,kBAACsF,EAAA,EAAD,CAASjH,UAAU,oBAAoB2B,GAAG,YAA1C,YAGEK,GACA,kBAAC,IAAMkF,SAAP,KACE,kBAACD,EAAA,EAAD,CAASjH,UAAU,oBAAoB2B,GAAG,UAA1C,SAGA,kBAACsF,EAAA,EAAD,CAASjH,UAAU,oBAAoB2B,GAAG,aAA1C,aAKHK,GACC,kBAAC,IAAMkF,SAAP,KACE,kBAACD,EAAA,EAAD,CAASjH,UAAU,oBAAoB2B,GAAG,YACvCK,EAAKwC,MAER,kBAACyC,EAAA,EAAD,CAASjH,UAAU,oBAAoB2B,GAAG,WAA1C,e,qCCnCCwF,GAVD,SAAC,GAAqC,IAAnC3C,EAAkC,EAAlCA,KAAM1D,EAA4B,EAA5BA,MAAO3D,EAAqB,EAArBA,MAAUiK,EAAW,yCACjD,OACE,yBAAKpH,UAAU,cACb,2BAAOqH,QAAS7C,GAAO1D,GACvB,2CAAWsG,EAAX,CAAiB5C,KAAMA,EAAMlC,GAAIkC,EAAMxE,UAAU,kBAChD7C,GAAS,yBAAK6C,UAAU,sBAAsB7C,KCYtCmK,GAjBA,SAAC,GAA8C,IAA5C9C,EAA2C,EAA3CA,KAAM1D,EAAqC,EAArCA,MAAOyG,EAA8B,EAA9BA,QAASpK,EAAqB,EAArBA,MAAUiK,EAAW,mDAC3D,OACE,yBAAKpH,UAAU,cACb,2BAAOqH,QAAS7C,GAAO1D,GACvB,4CAAYsG,EAAZ,CAAkB5C,KAAMA,EAAMlC,GAAIkC,EAAMxE,UAAU,iBAChD,4BAAQoE,MAAM,KACbmD,EAAQ3G,KAAI,SAAA4G,GAAM,OACjB,4BAAQ3G,IAAK2G,EAAOlG,IAAK8C,MAAOoD,EAAOlG,KACpCkG,EAAOhD,UAIbrH,GAAS,yBAAK6C,UAAU,sBAAsB7C,KCkEtCsK,G,2MAzEb5C,MAAQ,CACNhG,KAAM,GACN6I,OAAQ,I,EAEVC,SAAW,WACT,IACQxK,EAAUyK,KAAID,SAAS,EAAK9C,MAAMhG,KAAM,EAAKgJ,OADrC,CAAEC,YAAY,IACtB3K,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAMuK,EAAS,GALA,uBAOf,YAAiBvK,EAAM4K,QAAvB,oDAAS7G,EAAT,QAAgCwG,EAAOxG,EAAKd,KAAK,IAAMc,EAAK8G,SAP7C,kFAQf,OAAON,G,EAETO,iBAAmB,YAAsB,IAAnBzD,EAAkB,EAAlBA,KAAMJ,EAAY,EAAZA,MACpB8D,EAAG,gBAAM1D,EAAOJ,GAChByD,EAAM,gBAAMrD,EAAO,EAAKqD,OAAOrD,IAC7BrH,EAAUyK,KAAID,SAASO,EAAKL,GAA5B1K,MACR,OAAOA,EAAQA,EAAM4K,QAAQ,GAAGC,QAAU,M,EAE5CG,aAAe,SAAAzD,GACbA,EAAE0D,iBACF,IAAMV,EAAS,EAAKC,WACpB,EAAKvC,SAAS,CAAEsC,OAAQA,GAAU,KAC9BA,GACJ,EAAKW,Y,EAEPC,aAAe,YAA+B,IAAbC,EAAY,EAA3B5D,cACV+C,EAAM,eAAQ,EAAK7C,MAAM6C,QACzBc,EAAe,EAAKP,iBAAiBM,GACvCC,EAAcd,EAAOa,EAAM/D,MAAQgE,SAC3Bd,EAAOa,EAAM/D,MAEzB,IAAM3F,EAAI,eAAQ,EAAKgG,MAAMhG,MAC7BA,EAAK0J,EAAM/D,MAAQ+D,EAAMnE,MACzB,EAAKgB,SAAS,CAAEvG,OAAM6I,Y,4EAEX5G,GACX,OACE,4BAAQ2H,SAAU/H,KAAKiH,WAAY3H,UAAU,mBAC1Cc,K,mCAKM0D,EAAM1D,EAAOyG,GAAU,IAAD,EACR7G,KAAKmE,MAAtBhG,EADyB,EACzBA,KAAM6I,EADmB,EACnBA,OACd,OACE,kBAAC,GAAD,CACElD,KAAMA,EACNJ,MAAOvF,EAAK2F,GACZ1D,MAAOA,EACPyG,QAASA,EACTjD,SAAU5D,KAAK4H,aACfnL,MAAOuK,EAAOlD,O,kCAKRA,EAAM1D,GAAuB,IAAhByD,EAAe,uDAAR,OAAQ,EACb7D,KAAKmE,MAAtBhG,EAD8B,EAC9BA,KAAM6I,EADwB,EACxBA,OACd,OACE,kBAAC,GAAD,CACEnD,KAAMA,EACNC,KAAMA,EACNJ,MAAOvF,EAAK2F,GACZ1D,MAAOA,EACPwD,SAAU5D,KAAK4H,aACfnL,MAAOuK,EAAOlD,S,GArEHzD,aCyEJ2H,G,2MAvEb7D,MAAQ,CACNhG,KAAM,CACJ+C,MAAO,GACP+G,QAAS,GACTC,cAAe,GACfC,gBAAiB,IAEnB/D,OAAQ,GACR4C,OAAQ,I,EAEVG,OAAS,CACPvG,IAAKsG,KAAIkB,SACTlH,MAAOgG,KAAIkB,SAASC,WAAWjI,MAAM,SACrC6H,QAASf,KAAIkB,SAASC,WAAWjI,MAAM,SACvC8H,cAAehB,KAAIoB,SAASD,WAAWE,IAAI,GAAGC,IAAI,KAAKpI,MAAM,mBAC7D+H,gBAAiBjB,KAAIoB,SAASD,WAAWE,IAAI,GAAGC,IAAI,IAAIpI,MAAM,sB,EAkChEuH,S,sBAAW,sBAAA1J,EAAA,sEAEH8D,EAAU,EAAKoC,MAAMhG,MAFlB,OAGT,EAAKa,MAAMyJ,QAAQhH,KAAK,WAHf,2C,kNA9BsBS,I,gBAAjBkC,E,EAANjG,KACR6B,KAAK0E,SAAS,CAAEN,W,4QAME,SADVtC,EAAU9B,KAAKhB,MAAM0J,MAAMC,OAAO/G,I,iEAGVC,EAASC,G,gBAAzBf,E,EAAN5C,KACR6B,KAAK0E,SAAS,CAAEvG,KAAM6B,KAAK4I,eAAe7H,K,kDAEtC,KAAG/D,UAAmC,MAAvB,KAAGA,SAASE,QAAgB8C,KAAKhB,MAAMyJ,QAAQI,QAAQ,c,oRAKtE7I,KAAK8I,iB,uBACL9I,KAAK+I,gB,2IAGEhI,GACb,MAAO,CACLH,IAAKG,EAAMH,IACXM,MAAOH,EAAMG,MACb+G,QAASlH,EAAMkE,MAAMrE,IACrBsH,cAAenH,EAAMmH,cACrBC,gBAAiBpH,EAAMoH,mB,+BAUzB,OACE,6BACE,0CACA,0BAAMa,SAAUhJ,KAAKyH,cAClBzH,KAAKiJ,YAAY,QAAS,SAC1BjJ,KAAKkJ,aAAa,UAAW,QAASlJ,KAAKmE,MAAMC,QACjDpE,KAAKiJ,YAAY,gBAAiB,kBAAmB,UACrDjJ,KAAKiJ,YAAY,kBAAmB,QACpCjJ,KAAKmJ,aAAa,c,GAjELpC,I,oBC+CTqC,G,2MA7CbjF,MAAQ,CACNhG,KAAM,CAAEkL,SAAU,GAAIrL,SAAU,IAChCgJ,OAAQ,I,EAGVG,OAAS,CACPkC,SAAUnC,KAAIkB,SAASC,WAAWjI,MAAM,YACxCpC,SAAUkJ,KAAIkB,SAASC,WAAWjI,MAAM,a,EAG1CuH,S,sBAAW,gCAAA1J,EAAA,sEAECE,EAAS,EAAKgG,MAAdhG,KAFD,SAGDoD,EAAK/C,MAAML,EAAKkL,SAAUlL,EAAKH,UAH9B,OAICmG,EAAU,EAAKnF,MAAMsK,SAArBnF,MACRoF,OAAOD,SAAWnF,EAAQA,EAAMqF,KAAKC,SAAW,IALzC,gDAOH,KAAGzM,UAAmC,MAAvB,KAAGA,SAASE,UACvB8J,EADuC,eACzB,EAAK7C,MAAM6C,SACxBqC,SAAW,KAAGrM,SAASmB,KAC9B,EAAKuG,SAAS,CAAEsC,YAVX,yD,wEAgBT,OAAIzF,EAAK3C,iBAAyB,kBAAC8K,EAAA,EAAD,CAAUzI,GAAG,MAE7C,yBAAK3B,UAAU,OACb,yBAAKA,UAAU,WAAWH,MAAO,CAAEwK,UAAW,SAC5C,wBAAIxK,MAAO,CAAEyK,UAAW,SAAUC,MAAO,YAAzC,SACA,0BAAMb,SAAUhJ,KAAKyH,cAClBzH,KAAKiJ,YAAY,WAAY,YAC7BjJ,KAAKiJ,YAAY,WAAY,WAAY,YACzCjJ,KAAKmJ,aAAa,WAGvB,yBAAK7J,UAAU,YACb,yBAAKwK,IAAKC,KAAOC,OAAO,QAAQC,MAAM,e,GAvCxBlD,ICMTmD,G,4LARX3I,EAAK7C,SACL6K,OAAOD,SAAW,M,+BAGlB,OAAO,S,GANUjJ,a,oBCgCN8J,G,2MA9BbC,WAAa,WACX,EAAKpL,MAAMyJ,QAAQhH,KAAK,M,wEAGhB,IACAH,EAAStB,KAAKhB,MAAdsC,KACR,OAAKA,EAEH,yBAAKhC,UAAU,OACb,yBAAKH,MAAO,CAAEwK,UAAW,SAAWrK,UAAU,YAC5C,0CACA,6BACA,0CAAgBgC,EAAKwC,MACrB,6BACA,2CAAiBxC,EAAKvD,OACtB,6BACA,6BACA,6BACA,4BAAQuB,UAAU,kBAAkBD,QAASW,KAAKoK,YAAlD,SAIF,yBAAK9K,UAAU,YACb,yBAAKwK,IAAKC,KAAOC,OAAO,QAAQC,MAAM,WAjB1B,kBAACP,EAAA,EAAD,CAAUzI,GAAG,U,GAPbZ,aCoBPgK,GApBQ,SAAC,GAAoD,EAAlD3K,KAAmD,IAAlCW,EAAiC,EAA5CiK,UAAsBC,EAAsB,EAAtBA,OAAW7D,EAAW,8CAC1E,OACE,kBAAC8D,EAAA,EAAD,iBACM9D,EADN,CAEE6D,OAAQ,SAAAvL,GACN,OAAKuC,EAAK3C,iBASHyB,EAAY,kBAACA,EAAcrB,GAAYuL,EAAOvL,GAPjD,kBAAC0K,EAAA,EAAD,CACEzI,GAAI,CACFwI,SAAU,SACVtF,MAAO,CAAEqF,KAAMxK,EAAMsK,kB,oBCV9B,SAASmB,GAASnJ,GACvB,OAAOpD,EAAKV,KAHM,SAGY,CAC5BO,MAAOuD,EAAK+H,SACZrL,SAAUsD,EAAKtD,SACf8F,KAAMxC,EAAKwC,O,IC8CA4G,G,2MA9CbvG,MAAQ,CACNhG,KAAM,CAAEkL,SAAU,GAAIrL,SAAU,GAAI8F,KAAM,IAC1CkD,OAAQ,I,EAGVG,OAAS,CACPkC,SAAUnC,KAAIkB,SAASC,WAAWtK,QAAQqC,MAAM,YAChDpC,SAAUkJ,KAAIkB,SAASC,WAAWE,IAAI,GAAGnI,MAAM,YAC/C0D,KAAMoD,KAAIkB,SAASC,WAAWjI,MAAM,S,EAGtCuH,S,sBAAW,8BAAA1J,EAAA,+EAGgB0M,GAAqB,EAAKxG,MAAMhG,MAHhD,OAGDnB,EAHC,OAIPuE,EAAK9C,aAAazB,EAASa,QAAQ,iBACnC0L,OAAOD,SAAW,IALX,gDAOH,KAAGtM,UAAmC,MAAvB,KAAGA,SAASE,UACvB8J,EADuC,eACzB,EAAK7C,MAAM6C,SACxBqC,SAAW,KAAGrM,SAASmB,KAC9B,EAAKuG,SAAS,CAAEsC,YAVX,yD,wEAgBT,OACE,yBAAK1H,UAAU,OACb,yBAAKA,UAAU,WAAWH,MAAO,CAAEwK,UAAW,SAC5C,wBAAIxK,MAAO,CAAEyK,UAAW,SAAUC,MAAO,YAAzC,YACA,0BAAMb,SAAUhJ,KAAKyH,cAClBzH,KAAKiJ,YAAY,WAAY,YAC7BjJ,KAAKiJ,YAAY,WAAY,WAAY,YACzCjJ,KAAKiJ,YAAY,OAAQ,QACzBjJ,KAAKmJ,aAAa,cAGvB,yBAAK7J,UAAU,YACb,yBAAKwK,IAAKC,KAAOC,OAAO,QAAQC,MAAM,e,GAxCrBlD,IC6CZ6D,I,uNAjCbzG,MAAQ,G,mFAGN,IAAM7C,EAAOC,EAAK3C,iBAClBoB,KAAK0E,SAAS,CAAEpD,W,+BAGR,IACAA,EAAStB,KAAKmE,MAAd7C,KAER,OACE,kBAAC,IAAMkF,SAAP,KACE,kBAAC,iBAAD,MACA,kBAAC,GAAD,CAAQlF,KAAMA,IACd,0BAAMhC,UAAU,aACd,kBAACuL,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAO9K,KAAK,YAAY4K,UAAWI,KACnC,kBAACF,EAAA,EAAD,CAAO9K,KAAK,SAAS4K,UAAWlB,KAChC,kBAACoB,EAAA,EAAD,CAAO9K,KAAK,UAAU4K,UAAWJ,KACjC,kBAACM,EAAA,EAAD,CAAO9K,KAAK,WAAW6K,OAAQ,SAAAvL,GAAK,OAAI,kBAAC,GAAD,iBAAaA,EAAb,CAAoBsC,KAAMA,QAClE,kBAAC,GAAD,CAAgBgJ,UAAWtC,GAAWtI,KAAK,gBAC3C,kBAAC8K,EAAA,EAAD,CAAO9K,KAAK,UAAU6K,OAAQ,SAAAvL,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBsC,KAAMA,QAChE,kBAACkJ,EAAA,EAAD,CAAO9K,KAAK,aAAa4K,UAAWvE,IACpC,kBAACyE,EAAA,EAAD,CAAO9K,KAAK,WAAW4K,UAAWxE,IAClC,kBAAC0E,EAAA,EAAD,CAAO9K,KAAK,aAAa4K,UAAWtE,IACpC,kBAAC0D,EAAA,EAAD,CAAUF,KAAK,IAAIsB,OAAK,EAAC7J,GAAG,YAC5B,kBAACyI,EAAA,EAAD,CAAUzI,GAAG,sB,GA3BPZ,cCNE0K,QACW,cAA7BxB,OAAOD,SAAS0B,UAEe,UAA7BzB,OAAOD,SAAS0B,UAEhBzB,OAAOD,SAAS0B,SAAStC,MACvB,2D,YCPNhM,QAAQF,IAAI,WAAYM,sLAAYmO,gBAEpCC,IAASX,OACP,kBAACY,EAAA,EAAD,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnP,GACLC,QAAQD,MAAMA,EAAM6K,c","file":"static/js/main.6231f508.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/web.ed5f9761.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.d778eee1.png\";","module.exports = __webpack_public_path__ + \"static/media/web-developer.7466481c.png\";","function init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error('An unexpected error occurrred.');\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\n\r\nconst apiEndPoint = '/auth';\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nconst Like = props => { \r\n        let classes=\"fa fa-heart\" \r\n        if(!props.liked) classes+='-o';\r\n        return (\r\n        <i  style={{cursor:'pointer'}}onClick={props.onClick }className={classes} aria-hidden=\"true\"></i>\r\n        );\r\n}\r\nexport default Like;","import React, { Component } from 'react';\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = 'asc';\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport { Link } from 'react-router-dom';\r\nimport Like from './common/like';\r\nimport Table from './common/table';\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: 'title',\r\n      label: 'Title',\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>,\r\n    },\r\n    { path: 'genre.name', label: 'Genre' },\r\n    { path: 'numberInStock', label: 'Stock' },\r\n    { path: 'dailyRentalRate', label: 'Rate' },\r\n    {\r\n      key: 'like',\r\n      content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />,\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: 'delete',\r\n    content: movie => (\r\n      <button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return <Table columns={this.columns} data={movies} sortColumn={sortColumn} onSort={onSort} />;\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import http from './httpService';\r\n\r\nconst apiEndPoint = '/movies';\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from './httpService';\r\n\r\nexport function getGenres() {\r\n  return http.get('/genres');\r\n}\r\n","import React from 'react';\r\nconst ListGroup = props => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    selectedItem,\r\n    onItemSelect\r\n  } = props;\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? 'list-group-item active' : 'list-group-item'\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nListGroup.defaultProps = {\r\n  textProperty: 'name',\r\n  valueProperty: '_id'\r\n};\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? 'page-item active' : 'page-item'}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\nexport default Pagination;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)} \r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\nimport MoviesTable from './moviesTable';\r\nimport { getMovies, deleteMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\nimport ListGroup from './common/listGroup';\r\nimport Pagination from './common/pagination';\r\nimport { paginate } from '../utils/paginate';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBox from './searchBox';\r\nimport _ from 'lodash';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    searchQuery: '',\r\n    selectedGenre: null,\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    sortColumn: { path: 'title', order: 'asc' },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: '', name: 'All Genres' }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400)\r\n        toast.error('This Movie has already been deleted');\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: '', currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n    // ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n    // : allMovies;\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { length: count } = this.state.movies;\r\n    const { user } = this.props;\r\n\r\n    // if (count === 0) return <p>There is no Movies in the database</p>;\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-sm-9\">\r\n          {user && (\r\n            <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{ marginBottom: 20 }}>\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} Movies in the database.</p>\r\n\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from 'react';\r\nconst Customers = () => {\r\n    return <h1>Customers</h1>\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\nconst NotFound = () => {\r\n  return <h1>Page Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Prime Movies\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav ml-auto \">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = 'text') {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getMovie, saveMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: '',\r\n      genreId: '',\r\n      numberInStock: '',\r\n      dailyRentalRate: '',\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label('Title'),\r\n    genreId: Joi.string().required().label('Genre'),\r\n    numberInStock: Joi.number().required().min(0).max(100).label('Number in Stock'),\r\n    dailyRentalRate: Joi.number().required().min(0).max(10).label('Daily Rental Rate'),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === 'new') return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) this.props.history.replace('/not-found');\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n  doSubmit = async () => {\r\n    //call ther server\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push('/movies');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('title', 'Title')}\r\n          {this.renderSelect('genreId', 'Genre', this.state.genres)}\r\n          {this.renderInput('numberInStock', 'Number in Stock', 'number')}\r\n          {this.renderInput('dailyRentalRate', 'Rate')}\r\n          {this.renderButton('save')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n\r\n// import React from 'react';\r\n// import { getMovies } from './../services/fakeMovieService';\r\n// import { genres } from './../services/fakeGenreService';\r\n// const MovieForm = ({ match, history }) => {\r\n//   return (\r\n//     <div>\r\n//       <h1>Movie Form {match.params.id}</h1>\r\n//       <button\r\n//         className=\"btn btn-primary\"\r\n//         onClick={() => history.push('/movies')}\r\n//       >\r\n//         Save\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MovieForm;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport image from '../asset/web.png';\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: '', password: '' },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label('Username'),\r\n    password: Joi.string().required().label('Password'),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\" style={{ marginTop: '90px' }}>\r\n          <h1 style={{ textAlign: 'center', color: '#007bff' }}>Login</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput('username', 'Username')}\r\n            {this.renderInput('password', 'Password', 'password')}\r\n            {this.renderButton('Login')}\r\n          </form>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <img src={image} height=\"450px\" width=\"100%\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = '/';\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport image from '../asset/profile.png';\r\n\r\nclass Profile extends Component {\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    if (!user) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"row\">\r\n        <div style={{ marginTop: '160px' }} className=\"col-sm-6\">\r\n          <h3>My Profile</h3>\r\n          <hr />\r\n          <strong>Name : {user.name}</strong>\r\n          <br />\r\n          <strong>Email : {user.email}</strong>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <button className=\"btn btn-primary\" onClick={this.handleBack}>\r\n            Back\r\n          </button>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <img src={image} height=\"450px\" width=\"100%\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport auth from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from './httpService';\r\n\r\nconst apiEndPoint = '/users';\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport image from '../asset/web-developer.png';\r\nimport * as userService from '../services/userService';\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: '', password: '', name: '' },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().email().label('Username'),\r\n    password: Joi.string().required().min(5).label('Password'),\r\n    name: Joi.string().required().label('Name'),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    //call ther server\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers['x-auth-token']);\r\n      window.location = '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\" style={{ marginTop: '40px' }}>\r\n          <h1 style={{ textAlign: 'center', color: '#007bff' }}>Register</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput('username', 'Username')}\r\n            {this.renderInput('password', 'Password', 'password')}\r\n            {this.renderInput('name', 'Name')}\r\n            {this.renderButton('Register')}\r\n          </form>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <img src={image} height=\"450px\" width=\"100%\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from './components/movies';\nimport Rentals from './components/rentals';\nimport Customers from './components/customers';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport Logout from './components/logOut';\nimport Profile from './components/profile';\nimport auth from './services/authService';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport RegisterForm from './components/registerForm';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <Route path=\"/profile\" render={props => <Profile {...props} user={user} />}></Route>\n            <ProtectedRoute component={MovieForm} path=\"/movies/:id\" />\n            <Route path=\"/movies\" render={props => <Movies {...props} user={user} />} />\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\n\n\nconsole.log('adhikari', process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}